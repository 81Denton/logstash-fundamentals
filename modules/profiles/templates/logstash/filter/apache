# From modules/profiles/templates/logstash/filter/apache
filter {
  # This says, only do this parsing on events having the 'apache' tag.
  if [type] == "apache" {
    # Because there isn't a stand-alone parser for Apache logs, we have to build one
    # ourselves. This requires grok.
    # Documentation: https://www.elastic.co/guide/en/logstash/2.4/plugins-filters-grok.html
    grok {
      match => {
        "message" => "^%{COMBINEDAPACHELOG}"
      }
    }
  }
  # The 'COMBINEDAPACHELOG' and 'HTTPD24_ERRORLOG' are patterns that ship with logstash.
  # You can see their defines here: 
  # https://github.com/logstash-plugins/logstash-patterns-core/blob/v4.0.2/patterns/grok-patterns#L96-L98
  if [type] == "apache-error" {
    grok {
      match => {
        "message" => "^%{HTTPD24_ERRORLOG}"
      }
    }
  }
  if [type] == "apache" {
    # I renamed my comment-file ages ago. Anything going to mt-comment is a comment-spam bot.
    if [request] == "/cgi-bin/mt/mt-comments.cgi" {
      mutate {
        add_field => {
          "is_spam" => true
          "blog_target" => "comment-spam"
        }
      }
    }
    # Flag traffic going to the old blog.
    if [request] =~ "^\/blog" {
      mutate {
        add_field => { "blog_target" => "blogger" }
      }
    # Flag traffic going to the new blog.
    } else if [request] =~ "^\/mt\/blog" {
      mutate {
        add_field => { "blog_target" => "movabletype" }
      }
    # Flag traffic linking directly from images.
    } else if [request] =~ "^\/images" {
      mutate {
        add_field => { "blog_target" => "images" }
      }
    }

    # Set the timestamp of the event to the one in the Apache logs.
    date {
      match => ["timestamp", "dd/MMM/YYYY:HH:mm:ss Z"]
    }

    # if we got this far, it isn't spam.
    if [is_spam] != "true" {
      mutate {
        add_field => { "is_spam" => "false" }
      }
    }
  }
}
